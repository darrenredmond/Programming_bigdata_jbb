#####John Butler - Student Number 10353776 - Programming for Big Data - Assignment 1 - 26032017

####Overview of files
##calculatorclass.py shows the contents of the Calculator object.
##It contains menu options and all the functions required to perform 10 standard calculator functions
##It also conatins functions designed to ensure that the user enters valid inputs
##Where appropriate outputs are rounded to 4 decimal places eg for divide function to ensure 10/3 does not return 3.3333333333333333 etc

##calculatorapp.py shows the contents of the calculator application itself.
##it provides an interface with user allowing users to select menu options
##it calls on functions within calculatorclass.py to produce output

##testind_calculator.py contains testcode based on unittest framework for each of the 10 calculation functions
##it calls on functions within calculatorclass.py to test that actual results are as expected
## it is named testind_calculator.py as the tests are on functions that do not require direct user input

##testind_calculator.py contains testcode based on unittest framework.
##it calls on functions within calculatorclass.py to test that actual results are as expected
##it performs tests on the 10 calculation functions and on the 4 functions that require user input
##These 4 functions are get_valid_choice, getpositivefloat, getpositivefloat and getfloatint
##The rationale for showing this file separately is becuase it requires test user input it runs slower that testind_calculator.py
##No requirement to perform test on calculate_result function as this function simply calls other functions which have already been tested
##Also did not perform test on lists contained with functions because the successful testing of the function implies that lists are ok


import os
os. system('cls') 



from calculatorclass import Calculator
calculator = Calculator()

while True:
    s_input = raw_input("Press enter to continue or 'Q' to quit\n").upper()
    if s_input == 'Q':
        print 'Goodbye'
        break
    else:
	os. system('cls') 	
        calculator.show_menu()
        choice = calculator.get_valid_choice("Please enter a valid choice from menu\n")
        result = calculator.calculate_result(choice)
        print "\n\n\n\n\n\n"+result